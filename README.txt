*************************************************
*   ______ _____  ___ ______  ___  ___ _____    *
*   | ___ \  ___|/ _ \|  _  \ |  \/  ||  ___|   *
*   | |_/ / |__ / /_\ \ | | | | .  . || |__     *
*   |    /|  __||  _  | | | | | |\/| ||  __|    *
*   | |\ \| |___| | | | |/ /  | |  | || |___    *
*   \_| \_\____/\_| |_/___/   \_|  |_/\____/    *
*                                               *
*************************************************


AVA Modular Smart Home System
SYSC 3010
Group F5

Henri Cheung            [100962843]
Jason Van Kerkhoven     [100974276]
Nathaniel Charlebois    [100964496]
Sarah Garlough          [100965386]

04/07/2017

-----------------------------------------------------------
 
How to Run Terminal, Server, Magic Mirror and Media Driver (Can be run on Pi or Desktop)
1. Navigate to AVA-SH/jars/
2. Download desired jars
3. Run jars and follow on screen prompts
  **Notes:
	-Magic Mirror requires internet in order to operate
	-Terminal can run on Linux, however dialog boxes will appear as white boxes
    -Verbose can be run on Media Driver for debugging
	-Any other issues are marked
 
How to run Alarm Clock (on Pi with Piface)
1. Navigate to AVA-SH/src/alarm
2. Download alarmClock.py and beep-01a.mp3 onto same drive of Pi
3. Navigate to AVA-SH/src/network
4. Download DataChannel.py onto the same folder of drive as above 2 files
5. Open Terminal, and navigate to folder containing alarmClock.py, beep-01a.mp3 and DataChannel.py
6. Run code with "python alarmClock.py"
 
How to run Thermostat (on Pi)
1. Navigate to AVA-SH/src
2. Download thermo.py
3. Navigate t AVA-SH/src/network
4. Download DataChannel.py
5. Open terminal and run with "python thermo.py"
 
How to run Coffee Maker (on Pi with Gertboard)
1. Navigate to AVA-SH/src/coffeee-maker
2. Download coffeeMaker.py
3. Navigate t AVA-SH/src/network
4. Download DataChannel.py
5. Follow wiring instructions located from line 21-31 for connecting Gertboard and weight sensor
5. Open terminal and run with "python coffeeMaker.py"
 
Roadmap of the Git Folders:
Bin: Auto stuff generated by Eclipse (ie .class files)
 
Docs: Location of all group produced presentations and documentation
  -Presentation: Design Review and Test Review Powerpoints
  -AVA-Command-Manifest.txt: Summary of Communication protocols, as well all system commands
  -Packet-Format.txt: Further breakdown of how packets are created across the system
 
Jars: Runnable Versions of select modules
 
Lib: All necessary libraries to run non-Jar versions of project
 
Resources: No group created documentation  (ie Data Sheet's and songs for Media Player)
 
scr: final versions of code, divided up according to module/ major sub-system
  -io: Most JSON related code
  -network: code for inter module communication
 
 The logo files are included in github for Team enjoyment. 
  
  








